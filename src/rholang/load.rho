contract load(key, return) = {
  new deployer(`rho:rchain:deployerId`), stdout(`rho:io:stdout`) in {

    // Peek at the deployerId channel to get the root map
    for (@deployerMap <= deployer) {
      match deployerMap.get("codeDict") {
        Nil => {
          // If "codeDict" is not found, return Nil
          stdout!("Load: 'codeDict' not found. Returning Nil.") |
          return!(Nil)
        }
        codeDictMap => {
          // Check if the specific key exists in the "codeDict" map
          match codeDictMap.get(key) {
            Nil => {
              // If the key is not found in "codeDict", return Nil
              stdout!(("Load: Key '", key, "' not found in 'codeDict'. Returning Nil.")) |
              return!(Nil)
            }
            value => {
              // If the key is found, return the associated value
              stdout!(("Load: Key '", key, "' found in 'codeDict'. Returning value: ", value)) |
              return!(value)
            }
          }
        }
      }
    }
  }
}
